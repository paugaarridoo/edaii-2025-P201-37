753
Backporting
Backporting is the action of taking parts from a newer version of a software system or software component and porting them to an older version of the same software. It forms part of the maintenance step in a software development process, and it is commonly used for fixing security issues in older versions of the software and also for providing new features to older versions.

Overview
The simplest and probably most common situation of backporting is a fixed security hole in a newer version of a piece of software. Consider this simplified example:

Software v2.0 had a security vulnerability that is fixed by changing the text 'is_unsecured' to 'is_secured'.
The same security hole exists in Software v1.0, from which the codebase for the newer version is derived, but there the text may read 'is_notsecure'.
By taking the modification that fixes Software v2.0 and changing it so that it applies to Software v1.0, one has effectively backported the fix.
In real-life situations, the modifications that a single aspect of the software has undergone may be simple (only a few lines of code have changed) up to heavy and massive (many modifications spread across multiple files of the code). In the latter case, backporting may become tedious and inefficient and should only be undertaken if the older version of the software is really needed in favour of the newer (if, for example, the newer version still suffers stability problems that prevent its use in mission-critical situations).

Procedures
The process of backporting can be roughly divided into these steps:

identification of the problem in the older version of the software that needs to be fixed by a backport
finding out which (usually recent) modification of the code fixed the problem
adapting the modification to the old code situation (the proper backporting)
one or several levels of quality control –  testing whether the backported version maintains previous functionality as well as if it properly implements the new functionality.
Usually, multiple such modifications are bundled in a patch set.
Backports can be provided by the core developer group of the software. Since backporting needs access to the source code of a piece of software, this is the only way that backporting is done for closed source software –  the backports will usually be incorporated in binary upgrades along the old version line of the software. With open-source software, backports are sometimes created by software distributors and later sent upstream (that is, submitted to the core developers of the afflicted software).

Examples
Many features of Windows Vista were backported to Windows XP when Service Pack 3 was released for Windows XP, thereby facilitating compatibility of applications (mostly games) originally with Vista as a minimum requirement to run on XP SP3 as a minimum requirement instead.
The Debian Project since September 2010 has provided an official backporting service for some Debian Linux software packages, and Ubuntu Linux also supports backports.
In 2024, a YouTuber named MattKC backported .NET Framework versions 2.0 and 3.5 to Windows 95, which did not officially support the framework.

See also
[Backward compatibility](628)
Retrofitting
Java backporting tools


== References ==